name: Release Codes Database

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Version tag for the release (e.g., v1.0.0)'
        required: true
        default: ''

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Prepare output directory
      run: mkdir -p output && chmod -R 777 output

    - name: Run docker-compose
      run: docker compose up --build --abort-on-container-exit

    - name: Verify output files
      run: ls -la output/
      
    - name: Get tag name
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
        else
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        fi
    
    - name: Create release notes
      run: |
        echo "# Registry Codes Database Release ${{ env.TAG_NAME }}" > release_notes.md
        echo "" >> release_notes.md
        echo "Generated on $(date)" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Contents" >> release_notes.md
        echo "" >> release_notes.md
        echo "- **registry_codes.sqlite**: SQLite database file with all registry codes" >> release_notes.md
        echo "- **registry_codes_dump.sql**: PostgreSQL SQL dump file with all registry codes" >> release_notes.md

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Registry Codes ${{ env.TAG_NAME }}
        body_path: release_notes.md
        files: |
          output/registry_codes.sqlite
          output/registry_codes_dump.sql
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
